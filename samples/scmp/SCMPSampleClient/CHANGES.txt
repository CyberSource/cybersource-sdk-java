======================================================================
CHANGES.txt for Java SDK for ICS
Copyright 2004-2016 CyberSource Corporation.
======================================================================

Version 5.4.0

   CLT-92: Send proper line endings at the end of the HTTP header block
   to conform with stricter validation on the server side.
   Log the received error message to the debug log when HTTP status is not 200.

Version 5.3.4

   CLT-81: Allow CyberSource_SJC_US.crt to be updated without restarting.

Version 5.3.3

   FEJAVAEE-443: Add ssl.managed=true property to use externally configured SSLSocketFactory.

Version 5.3.2

   CLT-80: Change TLS to TLSv1.2

Version 5.3.1

   NGT-2440: Fix for NTA to return requestID in reply when ICSClient times out.


Version 5.3.0

   CLT-25: Added support for SHA-2 in certificates and message signatures.


Version 5.2.1

   CLT-22: Added support for SSL in IBM Java.


Version 5.2.0

   CLT-19: Added support for java.net.HttpURLConnection: useJdkUrlConnection=true.
   Added support for HTTPS.
   Requires Java 6.

Version 5.1.2

1) CLT-16: Plaintext reply is now parsed correctly for unencrypted SCMP, no longer resulting in an empty message.
   CLT-20: Added support for HTTP headers.

Version 5.1.1

1) CLT-7: Fixed host_id feature, which was broken since 5.0.4.
   Removed the request_id generator from the ICSClientRequest constructor.
   Call setRequestID() prior to sending the request if you want to pre-set a request_id.


Version 5.1.0

1) CLT-3: Update RSA classes to CertJ 6.1 and CryptoJ 6.1.


Version 5.0.5

1) CRQ SS-979: Support multiple security context types.


Version 5.0.4

1) CRQ 32284: Moved request_id generation up to the ICSClientRequest
   constructor so that it can be accessed via getRequestID() before
   send() is called.


Version 5.0.3

1) CRQ 31232: Set TCP_NODELAY on socket.


Version 5.0.2

1) CRQ 30247: Read response message using the character encoding
   specified in the message header or same encoding as the request.
   This allows ics_pay_subscription_retrieve to work properly with
   multibyte character encodings.

2) CRQ 29921: Missing FieldNameFilter class caused error in GCJ.
   Removed dependency on that class.


Version 5.0.1 

1) CRQ 29674: ECert was producing the same private key.


Version 5.0.0 

1) PCI compliance: Certain request/reply fields are now masked in logs.
   If you are currently logging the string returned by
   ICSClientRequest.toString() and/or ICSClientReply.toString(), please
   replace those calls with ICSClientRequest.toMaskedString() and
   ICSClientReply.toMaskedString(), respectively.
2) Requests will not go through if local IP address is 127.0.0.1.
3) Support for new property ics.hostID and new request field host_id
   to allow overriding of local IP address that is used for request id
   generation.
4) Request id from the server, if any, will now take precedence over
   over request id generated by the client.


Version 3.7.14

1) CRQ 24728: Updated ECert with the latest server cert.


Version 3.7.13

1) CRQ 23411: ECert failed to change \ to / when writing the
   ICSClient.properties file on Windows 2000.

2) CRQ 23416: NullPointerException if debugFile value is an invalid
   file name (e.g., blank) and debugLevel >= 5.

3) CRQ 23802: Created new ECert API and new ecert shell script.


Version 3.7.12

1) CRQ 22804: Fixed a thread problem that caused the error,
   "SPT_DATABASE service named Temp Memory DB is already registered".

2) CRQ 17305: Fixed ECert to allow underscores in merchant_id.


Version 3.7.11

1) CRQ 21186: Allow message to be sent using an expired merchant
   certificate.


Version 3.7.10

1) CRQ 20929: Change method
   ICSClientRequest.setCustomerCreditCardExpirationMonth(int) to pad
   the month value with 0 if the month is a single digit.

2) CRQ 18160: Deprecated most get/set methods in ICSClientRequest,
   ICSClientReply, and ICSClientOffer.  The preferred way to get/set
   fields is with the getField(String) and setField(String,String)
   methods.  Updated sample code to demonstrate this.


Version 3.7.9

1) CRQ 20263: Multiple security code initializations were causing slow
   performance under Java 1.3 and 1.4 in some situations.  Changed to
   initialize exactly once per JVM.


Version 3.7.7

1) CRQ 19388: Client was creating empty debug.log file when debug
   logging was disabled.  Fixed so that it creates the file only when
   property debugLevel > 0.

2) CRQ 19391: Client now encodes ICS request messages using UTF-8 and
   reads ICS reply messages using UTF-8.  ICSClientRequest can be
   constructed using any character encoding that Java supports.

3) CRQ 19128: Added support for plain-text requests.  This feature is
   used by internal CyberSource systems only.

4) Fixed retry request bug.


Version 3.7.6

1) CRQ 18929: Updated ECert with the latest server cert.


Version 3.7.5

1) CRQ 18809: Support case where content-length header is not
   specified in reply message.  Added additional debug output to
   troubleshoot bad replies.


Version 3.7.4

1) CRQ 18681: Added support for per-request http proxy setting.
   Include "http_proxy_host" and "http_proxy_port" fields in the
   request to specify http proxy host.  If it's not specified in the
   request, the client will use the proxy info specified in System
   properties, "http.proxyHost" and "http.proxyPort".


Version 3.7.3

1) CRQ 18065: Added cache for SCMPContext to reduce CPU utilization
   under heavy multithreaded use.

2) CRQ 17890: Added deprecated url field to ICSClient.  It was removed
   in a previous version, but has been added again for backward
   compatibility.  Do not use this field.  It's value is useless.

3) CRQ 17552: Deprecated ICSClientRequest(ICSClient) constructor.


Version 3.7.1

1) CRQ 17284: Updated ECert so that it provides a value for
   ics.keysPath in ICSClient.props.  Use of this property is
   perferable to using myCert, myPrivateKey, and serverCert.

2) CRQ 17297: Removed ICSClientMessageManager from the Javadoc output.

3) CRQ 17309: Added LICENSE.txt to the distribution package.


Version 3.7.0

1) CRQ 12500: Code cleanup, fixing several usability issues:

   * All properties are now optional and serve as default values

   * ICSClient() constructor is no longer deprecated.

   * A single instance of ICSClient can now be used with requests for
     multiple merchant_id's.

   * The client will automatically find cert and private key files
     based on merchant_id and keys_path fields in the request message.

   * Added ics.keysPath property to indicate the directory that
     contains the cert and private key files.

   * ICSClient methods now throw exceptions that are more specific.
     There is a new hierarchy of exceptions, based on ICSException, to
     indicate the cause of the error.

2) CRQ11964: Deprecated ics_notify methods in ICSClientRequest
   (notify_comment and notify_email).  (The server no longer supports
   ics_notify.)

3) CRQ12499: RuntimeExceptions will now be thrown as they occur and
   will not be recast to another exception type.

4) CRQ8515: added setNexus and getNexus to ICSClientRequest.

5) CRQ17227: removed samples for EDiscreet.  This service is no longer
   supported.


Version 3.6.4

1) Rebuilt package, adding ICSI18NMessages class to ics.jar file.

2) HTTP response code was not being read correctly under JDK 1.4 and
   certain versions of JDK 1.3.  (CRQ 16677)


Version 3.6.2

1) Changed security code so that expired server certificates will not
   cause a transaction to fail. (CRQ 13252)

2) Updated test files so that credit card expiration year is date in
   the future. (CRQ 13250)


Version 3.6.0

1) Replaced all security libraries with new RSA libraries.  This
   increases performance significantly for encryption and decryption.

2) Added more debug output.

3) Added stack trace logging for security.

4) Changed name from "CDK" to "SDK for ICS".


Version 3.5.0.0

1) Added retry request.  This entailed rewriting the communications
   code: HTTP protocol handling, timeout support, proxy support.

2) Changed format of client_lib_version.  It will always end with
   Java/x.x.x.x, indicating the current version.

3) Fixed bugs in loadFileBytes() in ICSClient.java and CdkEJB.java.

4) Added more debug output.


Version 3.4.1.0

The following changes are implemented in this version of the Java CDK:

1) MCash_Auth, MCash_Bill, and MCash_Credit services have been added.

2) Test files that show how to use the new Magnacash services have
   been added.  The test files are located in the the new /test/jsp
   sub-directory.


Version 3.4.0.0

The following changes are implemented in this version of the Java CDK:

1) EDiscreet_Auth, EDiscreet_Bill, EDiscreet_Credit and EDiscreet_Sale
   services have been added.

2) Test files that show how to use the new EDiscreet services have
   been added.


Version 3.3.1.0

The following changes are implemented in this version of the Java CDK:

1) The test files have changed.

2) ICS_ECP_Debit and ICS_ECP_Credit services have been added.

3) ECert has been changed.


Version 3.3.0.0

The following changes are implemented in this version of the Java CDK:

1) The ICS2Test key has been removed. You must now run ECert before
   you submit a test transaction.

2) ECert now modifies the properties/ICSClient.props.template and
   creates a new properties/ICSClient.props file. The new
   properties/ICSClient.props file that is created contains your
   merchant ID and information about the location of all required key
   files.

3) To create an ICSClient object, you now use the following
   format:

	ICSClient(String your-filename)

   This constructor format explicitly specifies the properties file
   that you enter (your-filename).

4) The test programs use the preferred ICSClient constructor shown in
   Item 3.  A SecureRandomTest program is included to enable you to
   determine whether or not your JVM is causing problems due to the
   use of the deprecated SecureRandom number generation.

5) Enterprise Java Beans (EJB) are an emerging standard for
   server-side component software. CyberSource provides basic EJB
   support in this release of the Java CDK. Refer to the
   README_EJB.txt file for information on creating, packaging,
   deploying, and testing EJB for Java CDK.

6) The ICSClient method no longer manages threads. In earlier
   releases, ICSClient created a thread to monitor and stop threads
   that timed out. This functionality was removed to allow for EJB
   support. Responsibility for monitoring timed-out threads is left to
   the developer. You can throw an InterruptedException to the
   ICSClient object to terminate the client at any time. ICSClient is
   still threadsafe.

7) Support for proxies and proxies with authentication now functions
   correctly.  The following ICS fields use regular HTTP proxy
   connections: http_proxy, http_proxy_username, and
   http_proxy_password. The http_proxy_username and
   http_proxy_password fields are optional, unless your proxy server
   requires them.

8) The tax convenience methods now function correctly.
